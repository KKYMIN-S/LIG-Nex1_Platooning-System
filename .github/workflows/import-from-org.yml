name: Import or update 15 org repos into monorepo

on:
  workflow_dispatch: {}   # Actions 탭에서 수동 실행

permissions:
  contents: write

jobs:
  import:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout monorepo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install git-subtree
        run: |
          sudo apt-get update
          sudo apt-get install -y git-subtree

      - name: Configure git identity
        run: |
          git config user.name  "monorepo-bot"
          git config user.email "monorepo-bot@users.noreply.github.com"

      - name: Import or update all 15 repos as subtrees
        env:
          TOKEN: ${{ secrets.PERSONAL_GH_PAT }}
          ORG: Platooning-ANTREES-with-LIG-Nex1
          PREFIX_ROOT: Platooning_System
          DEFAULT_BRANCH: main
        shell: bash
        run: |
          set -euo pipefail

          # ====== 레포 이름 목록 ======
          REPOS=(
            "Leader-CAR"
            "Platooning_main"
            "HSV_Tracker"
            "DistanceSensor"
            "Camera_Tracker"
            "MQTT"
            "ArUcoMarker_Detection"
            "Hough_Detector"
            "KCF_Tracker"
            "YB_Pcb_Car"
            "Color_Control"
            "Follow-Color-Car"
            "Control-Mode"
            "raspberry_VScode-install"
            "RaspberryPi-Docker-Install"
          )

          # 기본 브랜치가 main이 아닌 레포가 있으면 여기에서 지정 (예: BRANCH["MQTT"]="master")
          declare -A BRANCH
          # BRANCH["SomeRepo"]="develop"

          import_or_update () {
            local NAME="$1"
            local BR="${BRANCH[$NAME]:-$DEFAULT_BRANCH}"
            local PREFIX="${PREFIX_ROOT}/${NAME}"
            local REM="import-${NAME}"

            # 토큰 포함 HTTPS URL (비공개 레포도 OK)
            local URL="https://x-access-token:${TOKEN}@github.com/${ORG}/${NAME}.git"

            echo ""
            echo "=== ${NAME} (${BR}) -> ${PREFIX}"

            git remote remove "${REM}" 2>/dev/null || true
            git remote add    "${REM}" "${URL}"
            git fetch "${REM}" --tags

            if [ -d "${PREFIX}" ]; then
              echo " -> exists: pulling latest"
              git subtree pull --prefix="${PREFIX}" "${REM}" "${BR}" -m "Update ${NAME}"
            else
              echo " -> not found: importing"
              git subtree add  --prefix="${PREFIX}" "${REM}" "${BR}" -m "Import ${NAME} into ${PREFIX}"
            fi
          }

          for repo in "${REPOS[@]}"; do
            import_or_update "$repo"
          done

          echo ""
          echo "==> push"
          git push origin HEAD:main
